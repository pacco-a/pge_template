/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/tools/spritesheet/spritesheet.ts":
/*!**********************************************!*\
  !*** ./src/tools/spritesheet/spritesheet.ts ***!
  \**********************************************/
/***/ (function() {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst spritesheetForm = document.querySelector(\"#spritesheet-form\");\r\nconst outputJsonPreElem = document.querySelector(\"#json-output\");\r\nspritesheetForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const filenameInput = spritesheetForm[\"filename\"];\r\n    const ssWidthInput = spritesheetForm[\"width\"];\r\n    const ssHeightInput = spritesheetForm[\"height\"];\r\n    const tileWidthInput = spritesheetForm[\"tile-width\"];\r\n    const tileHeightInput = spritesheetForm[\"tile-height\"];\r\n    const tilesPerRow = parseFloat(ssWidthInput.value) / parseFloat(tileWidthInput.value);\r\n    const tilesPerCol = parseFloat(ssHeightInput.value) / parseFloat(tileHeightInput.value);\r\n    createSpritesheetData(filenameInput.value, tilesPerRow, tilesPerCol, parseFloat(tileWidthInput.value), parseFloat(tileHeightInput.value)).then((data) => {\r\n        outputJsonPreElem.innerText = JSON.stringify(data, null, \"\\t\");\r\n    });\r\n});\r\nfunction createSpritesheetData(filename, tilesPerRow, tilesPerCol, tileWidth, tileHeight) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const dataObject = {\r\n            frames: {},\r\n            meta: {\r\n                image: filename,\r\n                format: \"RGBA8888\",\r\n                size: { w: 10, h: 15 },\r\n                scale: \"1\",\r\n            },\r\n        };\r\n        let tileIndex = 0;\r\n        for (let x = 0; x < tilesPerRow; x++) {\r\n            for (let y = 0; y < tilesPerCol; y++) {\r\n                const tileX = tileWidth * x;\r\n                const tileY = tileWidth * y;\r\n                dataObject.frames[`${tileX},${tileY}`] = {\r\n                    frame: {\r\n                        x: tileX,\r\n                        y: tileY,\r\n                        w: tileWidth,\r\n                        h: tileHeight,\r\n                    },\r\n                    rotated: false,\r\n                    trimmed: false,\r\n                    spriteSourceSize: {\r\n                        x: 0,\r\n                        y: 0,\r\n                        w: tileWidth,\r\n                        h: tileHeight,\r\n                    },\r\n                    sourceSize: {\r\n                        w: tileWidth,\r\n                        h: tileHeight,\r\n                    },\r\n                };\r\n                // console.log(\r\n                // \t`x = ${tileX}, y = ${tileY}, w = ${tileWidth}, h = ${tileHeight}`\r\n                // );\r\n                tileIndex++;\r\n            }\r\n        }\r\n        return dataObject;\r\n    });\r\n}\r\nconsole.log(spritesheetForm);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJwYWNrX3R5cGVzY3JpcHQvLi9zcmMvdG9vbHMvc3ByaXRlc2hlZXQvc3ByaXRlc2hlZXQudHM/NjE3MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsTUFBTSxlQUFlLEdBQW9CLFFBQVEsQ0FBQyxhQUFhLENBQzlELG1CQUFtQixDQUNBLENBQUM7QUFFckIsTUFBTSxpQkFBaUIsR0FBbUIsUUFBUSxDQUFDLGFBQWEsQ0FDL0QsY0FBYyxDQUNJLENBQUM7QUFFcEIsZUFBZSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFO0lBQ2hELENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUNuQixNQUFNLGFBQWEsR0FBRyxlQUFlLENBQUMsVUFBVSxDQUFxQixDQUFDO0lBQ3RFLE1BQU0sWUFBWSxHQUFHLGVBQWUsQ0FBQyxPQUFPLENBQXFCLENBQUM7SUFDbEUsTUFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDLFFBQVEsQ0FBcUIsQ0FBQztJQUNwRSxNQUFNLGNBQWMsR0FBRyxlQUFlLENBQUMsWUFBWSxDQUFxQixDQUFDO0lBQ3pFLE1BQU0sZUFBZSxHQUFHLGVBQWUsQ0FBQyxhQUFhLENBQXFCLENBQUM7SUFFM0UsTUFBTSxXQUFXLEdBQ2hCLFVBQVUsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVuRSxNQUFNLFdBQVcsR0FDaEIsVUFBVSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsR0FBRyxVQUFVLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRXJFLHFCQUFxQixDQUNwQixhQUFhLENBQUMsS0FBSyxFQUNuQixXQUFXLEVBQ1gsV0FBVyxFQUNYLFVBQVUsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQ2hDLFVBQVUsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQ2pDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDZixpQkFBaUIsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLENBQUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUM7QUFFSCxTQUFlLHFCQUFxQixDQUNuQyxRQUFnQixFQUNoQixXQUFtQixFQUNuQixXQUFtQixFQUNuQixTQUFpQixFQUNqQixVQUFrQjs7UUFFbEIsTUFBTSxVQUFVLEdBQVE7WUFDdkIsTUFBTSxFQUFFLEVBQUU7WUFDVixJQUFJLEVBQUU7Z0JBQ0wsS0FBSyxFQUFFLFFBQVE7Z0JBQ2YsTUFBTSxFQUFFLFVBQVU7Z0JBQ2xCLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtnQkFDdEIsS0FBSyxFQUFFLEdBQUc7YUFDVjtTQUNELENBQUM7UUFFRixJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFFbEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNyQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNyQyxNQUFNLEtBQUssR0FBRyxTQUFTLEdBQUcsQ0FBQyxDQUFDO2dCQUM1QixNQUFNLEtBQUssR0FBRyxTQUFTLEdBQUcsQ0FBQyxDQUFDO2dCQUU1QixVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxJQUFJLEtBQUssRUFBRSxDQUFDLEdBQUc7b0JBQ3hDLEtBQUssRUFBRTt3QkFDTixDQUFDLEVBQUUsS0FBSzt3QkFDUixDQUFDLEVBQUUsS0FBSzt3QkFDUixDQUFDLEVBQUUsU0FBUzt3QkFDWixDQUFDLEVBQUUsVUFBVTtxQkFDYjtvQkFDRCxPQUFPLEVBQUUsS0FBSztvQkFDZCxPQUFPLEVBQUUsS0FBSztvQkFDZCxnQkFBZ0IsRUFBRTt3QkFDakIsQ0FBQyxFQUFFLENBQUM7d0JBQ0osQ0FBQyxFQUFFLENBQUM7d0JBQ0osQ0FBQyxFQUFFLFNBQVM7d0JBQ1osQ0FBQyxFQUFFLFVBQVU7cUJBQ2I7b0JBQ0QsVUFBVSxFQUFFO3dCQUNYLENBQUMsRUFBRSxTQUFTO3dCQUNaLENBQUMsRUFBRSxVQUFVO3FCQUNiO2lCQUNELENBQUM7Z0JBRUYsZUFBZTtnQkFDZixxRUFBcUU7Z0JBQ3JFLEtBQUs7Z0JBRUwsU0FBUyxFQUFFLENBQUM7YUFDWjtTQUNEO1FBRUQsT0FBTyxVQUFVLENBQUM7SUFDbkIsQ0FBQztDQUFBO0FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyIsImZpbGUiOiIuL3NyYy90b29scy9zcHJpdGVzaGVldC9zcHJpdGVzaGVldC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNwcml0ZXNoZWV0Rm9ybTogSFRNTEZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuXHRcIiNzcHJpdGVzaGVldC1mb3JtXCJcclxuKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XHJcblxyXG5jb25zdCBvdXRwdXRKc29uUHJlRWxlbTogSFRNTFByZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG5cdFwiI2pzb24tb3V0cHV0XCJcclxuKSBhcyBIVE1MUHJlRWxlbWVudDtcclxuXHJcbnNwcml0ZXNoZWV0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcblx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdGNvbnN0IGZpbGVuYW1lSW5wdXQgPSBzcHJpdGVzaGVldEZvcm1bXCJmaWxlbmFtZVwiXSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5cdGNvbnN0IHNzV2lkdGhJbnB1dCA9IHNwcml0ZXNoZWV0Rm9ybVtcIndpZHRoXCJdIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblx0Y29uc3Qgc3NIZWlnaHRJbnB1dCA9IHNwcml0ZXNoZWV0Rm9ybVtcImhlaWdodFwiXSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5cdGNvbnN0IHRpbGVXaWR0aElucHV0ID0gc3ByaXRlc2hlZXRGb3JtW1widGlsZS13aWR0aFwiXSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5cdGNvbnN0IHRpbGVIZWlnaHRJbnB1dCA9IHNwcml0ZXNoZWV0Rm9ybVtcInRpbGUtaGVpZ2h0XCJdIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG5cdGNvbnN0IHRpbGVzUGVyUm93OiBudW1iZXIgPVxyXG5cdFx0cGFyc2VGbG9hdChzc1dpZHRoSW5wdXQudmFsdWUpIC8gcGFyc2VGbG9hdCh0aWxlV2lkdGhJbnB1dC52YWx1ZSk7XHJcblxyXG5cdGNvbnN0IHRpbGVzUGVyQ29sOiBudW1iZXIgPVxyXG5cdFx0cGFyc2VGbG9hdChzc0hlaWdodElucHV0LnZhbHVlKSAvIHBhcnNlRmxvYXQodGlsZUhlaWdodElucHV0LnZhbHVlKTtcclxuXHJcblx0Y3JlYXRlU3ByaXRlc2hlZXREYXRhKFxyXG5cdFx0ZmlsZW5hbWVJbnB1dC52YWx1ZSxcclxuXHRcdHRpbGVzUGVyUm93LFxyXG5cdFx0dGlsZXNQZXJDb2wsXHJcblx0XHRwYXJzZUZsb2F0KHRpbGVXaWR0aElucHV0LnZhbHVlKSxcclxuXHRcdHBhcnNlRmxvYXQodGlsZUhlaWdodElucHV0LnZhbHVlKVxyXG5cdCkudGhlbigoZGF0YSkgPT4ge1xyXG5cdFx0b3V0cHV0SnNvblByZUVsZW0uaW5uZXJUZXh0ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgXCJcXHRcIik7XHJcblx0fSk7XHJcbn0pO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlU3ByaXRlc2hlZXREYXRhKFxyXG5cdGZpbGVuYW1lOiBzdHJpbmcsXHJcblx0dGlsZXNQZXJSb3c6IG51bWJlcixcclxuXHR0aWxlc1BlckNvbDogbnVtYmVyLFxyXG5cdHRpbGVXaWR0aDogbnVtYmVyLFxyXG5cdHRpbGVIZWlnaHQ6IG51bWJlclxyXG4pIHtcclxuXHRjb25zdCBkYXRhT2JqZWN0OiBhbnkgPSB7XHJcblx0XHRmcmFtZXM6IHt9LFxyXG5cdFx0bWV0YToge1xyXG5cdFx0XHRpbWFnZTogZmlsZW5hbWUsXHJcblx0XHRcdGZvcm1hdDogXCJSR0JBODg4OFwiLFxyXG5cdFx0XHRzaXplOiB7IHc6IDEwLCBoOiAxNSB9LFxyXG5cdFx0XHRzY2FsZTogXCIxXCIsXHJcblx0XHR9LFxyXG5cdH07XHJcblxyXG5cdGxldCB0aWxlSW5kZXggPSAwO1xyXG5cclxuXHRmb3IgKGxldCB4ID0gMDsgeCA8IHRpbGVzUGVyUm93OyB4KyspIHtcclxuXHRcdGZvciAobGV0IHkgPSAwOyB5IDwgdGlsZXNQZXJDb2w7IHkrKykge1xyXG5cdFx0XHRjb25zdCB0aWxlWCA9IHRpbGVXaWR0aCAqIHg7XHJcblx0XHRcdGNvbnN0IHRpbGVZID0gdGlsZVdpZHRoICogeTtcclxuXHJcblx0XHRcdGRhdGFPYmplY3QuZnJhbWVzW2Ake3RpbGVYfSwke3RpbGVZfWBdID0ge1xyXG5cdFx0XHRcdGZyYW1lOiB7XHJcblx0XHRcdFx0XHR4OiB0aWxlWCxcclxuXHRcdFx0XHRcdHk6IHRpbGVZLFxyXG5cdFx0XHRcdFx0dzogdGlsZVdpZHRoLFxyXG5cdFx0XHRcdFx0aDogdGlsZUhlaWdodCxcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHJvdGF0ZWQ6IGZhbHNlLFxyXG5cdFx0XHRcdHRyaW1tZWQ6IGZhbHNlLFxyXG5cdFx0XHRcdHNwcml0ZVNvdXJjZVNpemU6IHtcclxuXHRcdFx0XHRcdHg6IDAsXHJcblx0XHRcdFx0XHR5OiAwLFxyXG5cdFx0XHRcdFx0dzogdGlsZVdpZHRoLFxyXG5cdFx0XHRcdFx0aDogdGlsZUhlaWdodCxcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHNvdXJjZVNpemU6IHtcclxuXHRcdFx0XHRcdHc6IHRpbGVXaWR0aCxcclxuXHRcdFx0XHRcdGg6IHRpbGVIZWlnaHQsXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdC8vIGNvbnNvbGUubG9nKFxyXG5cdFx0XHQvLyBcdGB4ID0gJHt0aWxlWH0sIHkgPSAke3RpbGVZfSwgdyA9ICR7dGlsZVdpZHRofSwgaCA9ICR7dGlsZUhlaWdodH1gXHJcblx0XHRcdC8vICk7XHJcblxyXG5cdFx0XHR0aWxlSW5kZXgrKztcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBkYXRhT2JqZWN0O1xyXG59XHJcblxyXG5jb25zb2xlLmxvZyhzcHJpdGVzaGVldEZvcm0pO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/tools/spritesheet/spritesheet.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/tools/spritesheet/spritesheet.ts"]();
/******/ 	
/******/ })()
;