/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/pge_engine/tools/spritesheet/spritesheet.ts":
/*!*********************************************************!*\
  !*** ./src/pge_engine/tools/spritesheet/spritesheet.ts ***!
  \*********************************************************/
/***/ (function() {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst spritesheetForm = document.querySelector(\"#spritesheet-form\");\r\nconst outputJsonPreElem = document.querySelector(\"#json-output\");\r\nspritesheetForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    const filenameInput = spritesheetForm[\"filename\"];\r\n    const ssWidthInput = spritesheetForm[\"width\"];\r\n    const ssHeightInput = spritesheetForm[\"height\"];\r\n    const tileWidthInput = spritesheetForm[\"tile-width\"];\r\n    const tileHeightInput = spritesheetForm[\"tile-height\"];\r\n    const tilesPerRow = parseFloat(ssWidthInput.value) / parseFloat(tileWidthInput.value);\r\n    const tilesPerCol = parseFloat(ssHeightInput.value) / parseFloat(tileHeightInput.value);\r\n    createSpritesheetData(filenameInput.value, tilesPerRow, tilesPerCol, parseFloat(tileWidthInput.value), parseFloat(tileHeightInput.value)).then((data) => {\r\n        outputJsonPreElem.innerText = JSON.stringify(data, null, \"\\t\");\r\n    });\r\n});\r\nfunction createSpritesheetData(filename, tilesPerRow, tilesPerCol, tileWidth, tileHeight) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const dataObject = {\r\n            frames: {},\r\n            meta: {\r\n                image: filename,\r\n                format: \"RGBA8888\",\r\n                size: { w: 10, h: 15 },\r\n                scale: \"1\",\r\n            },\r\n        };\r\n        let tileIndex = 0;\r\n        for (let x = 0; x < tilesPerRow; x++) {\r\n            for (let y = 0; y < tilesPerCol; y++) {\r\n                const tileX = tileWidth * x;\r\n                const tileY = tileWidth * y;\r\n                dataObject.frames[`${tileX},${tileY}`] = {\r\n                    frame: {\r\n                        x: tileX,\r\n                        y: tileY,\r\n                        w: tileWidth,\r\n                        h: tileHeight,\r\n                    },\r\n                    rotated: false,\r\n                    trimmed: false,\r\n                    spriteSourceSize: {\r\n                        x: 0,\r\n                        y: 0,\r\n                        w: tileWidth,\r\n                        h: tileHeight,\r\n                    },\r\n                    sourceSize: {\r\n                        w: tileWidth,\r\n                        h: tileHeight,\r\n                    },\r\n                };\r\n                // console.log(\r\n                // \t`x = ${tileX}, y = ${tileY}, w = ${tileWidth}, h = ${tileHeight}`\r\n                // );\r\n                tileIndex++;\r\n            }\r\n        }\r\n        return dataObject;\r\n    });\r\n}\r\nconsole.log(spritesheetForm);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wZ2VfdGVtcGxhdGUvLi9zcmMvcGdlX2VuZ2luZS90b29scy9zcHJpdGVzaGVldC9zcHJpdGVzaGVldC50cz84NTQ5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxNQUFNLGVBQWUsR0FBb0IsUUFBUSxDQUFDLGFBQWEsQ0FDOUQsbUJBQW1CLENBQ0EsQ0FBQztBQUVyQixNQUFNLGlCQUFpQixHQUFtQixRQUFRLENBQUMsYUFBYSxDQUMvRCxjQUFjLENBQ0ksQ0FBQztBQUVwQixlQUFlLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7SUFDaEQsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ25CLE1BQU0sYUFBYSxHQUFHLGVBQWUsQ0FBQyxVQUFVLENBQXFCLENBQUM7SUFDdEUsTUFBTSxZQUFZLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBcUIsQ0FBQztJQUNsRSxNQUFNLGFBQWEsR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFxQixDQUFDO0lBQ3BFLE1BQU0sY0FBYyxHQUFHLGVBQWUsQ0FBQyxZQUFZLENBQXFCLENBQUM7SUFDekUsTUFBTSxlQUFlLEdBQUcsZUFBZSxDQUFDLGFBQWEsQ0FBcUIsQ0FBQztJQUUzRSxNQUFNLFdBQVcsR0FDaEIsVUFBVSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRW5FLE1BQU0sV0FBVyxHQUNoQixVQUFVLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxHQUFHLFVBQVUsQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFckUscUJBQXFCLENBQ3BCLGFBQWEsQ0FBQyxLQUFLLEVBQ25CLFdBQVcsRUFDWCxXQUFXLEVBQ1gsVUFBVSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsRUFDaEMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FDakMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUNmLGlCQUFpQixDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEUsQ0FBQyxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMsQ0FBQztBQUVILFNBQWUscUJBQXFCLENBQ25DLFFBQWdCLEVBQ2hCLFdBQW1CLEVBQ25CLFdBQW1CLEVBQ25CLFNBQWlCLEVBQ2pCLFVBQWtCOztRQUVsQixNQUFNLFVBQVUsR0FBUTtZQUN2QixNQUFNLEVBQUUsRUFBRTtZQUNWLElBQUksRUFBRTtnQkFDTCxLQUFLLEVBQUUsUUFBUTtnQkFDZixNQUFNLEVBQUUsVUFBVTtnQkFDbEIsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO2dCQUN0QixLQUFLLEVBQUUsR0FBRzthQUNWO1NBQ0QsQ0FBQztRQUVGLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQztRQUVsQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ3JDLE1BQU0sS0FBSyxHQUFHLFNBQVMsR0FBRyxDQUFDLENBQUM7Z0JBQzVCLE1BQU0sS0FBSyxHQUFHLFNBQVMsR0FBRyxDQUFDLENBQUM7Z0JBRTVCLFVBQVUsQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLElBQUksS0FBSyxFQUFFLENBQUMsR0FBRztvQkFDeEMsS0FBSyxFQUFFO3dCQUNOLENBQUMsRUFBRSxLQUFLO3dCQUNSLENBQUMsRUFBRSxLQUFLO3dCQUNSLENBQUMsRUFBRSxTQUFTO3dCQUNaLENBQUMsRUFBRSxVQUFVO3FCQUNiO29CQUNELE9BQU8sRUFBRSxLQUFLO29CQUNkLE9BQU8sRUFBRSxLQUFLO29CQUNkLGdCQUFnQixFQUFFO3dCQUNqQixDQUFDLEVBQUUsQ0FBQzt3QkFDSixDQUFDLEVBQUUsQ0FBQzt3QkFDSixDQUFDLEVBQUUsU0FBUzt3QkFDWixDQUFDLEVBQUUsVUFBVTtxQkFDYjtvQkFDRCxVQUFVLEVBQUU7d0JBQ1gsQ0FBQyxFQUFFLFNBQVM7d0JBQ1osQ0FBQyxFQUFFLFVBQVU7cUJBQ2I7aUJBQ0QsQ0FBQztnQkFFRixlQUFlO2dCQUNmLHFFQUFxRTtnQkFDckUsS0FBSztnQkFFTCxTQUFTLEVBQUUsQ0FBQzthQUNaO1NBQ0Q7UUFFRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0NBQUE7QUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vc3JjL3BnZV9lbmdpbmUvdG9vbHMvc3ByaXRlc2hlZXQvc3ByaXRlc2hlZXQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzcHJpdGVzaGVldEZvcm06IEhUTUxGb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcblx0XCIjc3ByaXRlc2hlZXQtZm9ybVwiXHJcbikgYXMgSFRNTEZvcm1FbGVtZW50O1xyXG5cclxuY29uc3Qgb3V0cHV0SnNvblByZUVsZW06IEhUTUxQcmVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuXHRcIiNqc29uLW91dHB1dFwiXHJcbikgYXMgSFRNTFByZUVsZW1lbnQ7XHJcblxyXG5zcHJpdGVzaGVldEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG5cdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRjb25zdCBmaWxlbmFtZUlucHV0ID0gc3ByaXRlc2hlZXRGb3JtW1wiZmlsZW5hbWVcIl0gYXMgSFRNTElucHV0RWxlbWVudDtcclxuXHRjb25zdCBzc1dpZHRoSW5wdXQgPSBzcHJpdGVzaGVldEZvcm1bXCJ3aWR0aFwiXSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5cdGNvbnN0IHNzSGVpZ2h0SW5wdXQgPSBzcHJpdGVzaGVldEZvcm1bXCJoZWlnaHRcIl0gYXMgSFRNTElucHV0RWxlbWVudDtcclxuXHRjb25zdCB0aWxlV2lkdGhJbnB1dCA9IHNwcml0ZXNoZWV0Rm9ybVtcInRpbGUtd2lkdGhcIl0gYXMgSFRNTElucHV0RWxlbWVudDtcclxuXHRjb25zdCB0aWxlSGVpZ2h0SW5wdXQgPSBzcHJpdGVzaGVldEZvcm1bXCJ0aWxlLWhlaWdodFwiXSBhcyBIVE1MSW5wdXRFbGVtZW50O1xyXG5cclxuXHRjb25zdCB0aWxlc1BlclJvdzogbnVtYmVyID1cclxuXHRcdHBhcnNlRmxvYXQoc3NXaWR0aElucHV0LnZhbHVlKSAvIHBhcnNlRmxvYXQodGlsZVdpZHRoSW5wdXQudmFsdWUpO1xyXG5cclxuXHRjb25zdCB0aWxlc1BlckNvbDogbnVtYmVyID1cclxuXHRcdHBhcnNlRmxvYXQoc3NIZWlnaHRJbnB1dC52YWx1ZSkgLyBwYXJzZUZsb2F0KHRpbGVIZWlnaHRJbnB1dC52YWx1ZSk7XHJcblxyXG5cdGNyZWF0ZVNwcml0ZXNoZWV0RGF0YShcclxuXHRcdGZpbGVuYW1lSW5wdXQudmFsdWUsXHJcblx0XHR0aWxlc1BlclJvdyxcclxuXHRcdHRpbGVzUGVyQ29sLFxyXG5cdFx0cGFyc2VGbG9hdCh0aWxlV2lkdGhJbnB1dC52YWx1ZSksXHJcblx0XHRwYXJzZUZsb2F0KHRpbGVIZWlnaHRJbnB1dC52YWx1ZSlcclxuXHQpLnRoZW4oKGRhdGEpID0+IHtcclxuXHRcdG91dHB1dEpzb25QcmVFbGVtLmlubmVyVGV4dCA9IEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIFwiXFx0XCIpO1xyXG5cdH0pO1xyXG59KTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVNwcml0ZXNoZWV0RGF0YShcclxuXHRmaWxlbmFtZTogc3RyaW5nLFxyXG5cdHRpbGVzUGVyUm93OiBudW1iZXIsXHJcblx0dGlsZXNQZXJDb2w6IG51bWJlcixcclxuXHR0aWxlV2lkdGg6IG51bWJlcixcclxuXHR0aWxlSGVpZ2h0OiBudW1iZXJcclxuKSB7XHJcblx0Y29uc3QgZGF0YU9iamVjdDogYW55ID0ge1xyXG5cdFx0ZnJhbWVzOiB7fSxcclxuXHRcdG1ldGE6IHtcclxuXHRcdFx0aW1hZ2U6IGZpbGVuYW1lLFxyXG5cdFx0XHRmb3JtYXQ6IFwiUkdCQTg4ODhcIixcclxuXHRcdFx0c2l6ZTogeyB3OiAxMCwgaDogMTUgfSxcclxuXHRcdFx0c2NhbGU6IFwiMVwiLFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRsZXQgdGlsZUluZGV4ID0gMDtcclxuXHJcblx0Zm9yIChsZXQgeCA9IDA7IHggPCB0aWxlc1BlclJvdzsgeCsrKSB7XHJcblx0XHRmb3IgKGxldCB5ID0gMDsgeSA8IHRpbGVzUGVyQ29sOyB5KyspIHtcclxuXHRcdFx0Y29uc3QgdGlsZVggPSB0aWxlV2lkdGggKiB4O1xyXG5cdFx0XHRjb25zdCB0aWxlWSA9IHRpbGVXaWR0aCAqIHk7XHJcblxyXG5cdFx0XHRkYXRhT2JqZWN0LmZyYW1lc1tgJHt0aWxlWH0sJHt0aWxlWX1gXSA9IHtcclxuXHRcdFx0XHRmcmFtZToge1xyXG5cdFx0XHRcdFx0eDogdGlsZVgsXHJcblx0XHRcdFx0XHR5OiB0aWxlWSxcclxuXHRcdFx0XHRcdHc6IHRpbGVXaWR0aCxcclxuXHRcdFx0XHRcdGg6IHRpbGVIZWlnaHQsXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRyb3RhdGVkOiBmYWxzZSxcclxuXHRcdFx0XHR0cmltbWVkOiBmYWxzZSxcclxuXHRcdFx0XHRzcHJpdGVTb3VyY2VTaXplOiB7XHJcblx0XHRcdFx0XHR4OiAwLFxyXG5cdFx0XHRcdFx0eTogMCxcclxuXHRcdFx0XHRcdHc6IHRpbGVXaWR0aCxcclxuXHRcdFx0XHRcdGg6IHRpbGVIZWlnaHQsXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRzb3VyY2VTaXplOiB7XHJcblx0XHRcdFx0XHR3OiB0aWxlV2lkdGgsXHJcblx0XHRcdFx0XHRoOiB0aWxlSGVpZ2h0LFxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHQvLyBjb25zb2xlLmxvZyhcclxuXHRcdFx0Ly8gXHRgeCA9ICR7dGlsZVh9LCB5ID0gJHt0aWxlWX0sIHcgPSAke3RpbGVXaWR0aH0sIGggPSAke3RpbGVIZWlnaHR9YFxyXG5cdFx0XHQvLyApO1xyXG5cclxuXHRcdFx0dGlsZUluZGV4Kys7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZGF0YU9iamVjdDtcclxufVxyXG5cclxuY29uc29sZS5sb2coc3ByaXRlc2hlZXRGb3JtKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pge_engine/tools/spritesheet/spritesheet.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/pge_engine/tools/spritesheet/spritesheet.ts"]();
/******/ 	
/******/ })()
;